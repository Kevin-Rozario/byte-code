/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProblemsIndexImport } from './routes/problems/index'
import { Route as PlaylistsIndexImport } from './routes/playlists/index'
import { Route as AuthIndexImport } from './routes/_auth/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AuthAuthSignUpIndexLazyImport = createFileRoute('/_auth/auth/sign-up/')()
const AuthAuthSignInIndexLazyImport = createFileRoute('/_auth/auth/sign-in/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProblemsIndexRoute = ProblemsIndexImport.update({
  id: '/problems/',
  path: '/problems/',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistsIndexRoute = PlaylistsIndexImport.update({
  id: '/playlists/',
  path: '/playlists/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/_auth/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthSignUpIndexLazyRoute = AuthAuthSignUpIndexLazyImport.update({
  id: '/_auth/auth/sign-up/',
  path: '/auth/sign-up/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/sign-up/index.lazy').then((d) => d.Route),
)

const AuthAuthSignInIndexLazyRoute = AuthAuthSignInIndexLazyImport.update({
  id: '/_auth/auth/sign-in/',
  path: '/auth/sign-in/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/sign-in/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/playlists/': {
      id: '/playlists/'
      path: '/playlists'
      fullPath: '/playlists'
      preLoaderRoute: typeof PlaylistsIndexImport
      parentRoute: typeof rootRoute
    }
    '/problems/': {
      id: '/problems/'
      path: '/problems'
      fullPath: '/problems'
      preLoaderRoute: typeof ProblemsIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth/sign-in/': {
      id: '/_auth/auth/sign-in/'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthAuthSignInIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth/sign-up/': {
      id: '/_auth/auth/sign-up/'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthAuthSignUpIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof AuthIndexRoute
  '/playlists': typeof PlaylistsIndexRoute
  '/problems': typeof ProblemsIndexRoute
  '/auth/sign-in': typeof AuthAuthSignInIndexLazyRoute
  '/auth/sign-up': typeof AuthAuthSignUpIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthIndexRoute
  '/playlists': typeof PlaylistsIndexRoute
  '/problems': typeof ProblemsIndexRoute
  '/auth/sign-in': typeof AuthAuthSignInIndexLazyRoute
  '/auth/sign-up': typeof AuthAuthSignUpIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_auth/': typeof AuthIndexRoute
  '/playlists/': typeof PlaylistsIndexRoute
  '/problems/': typeof ProblemsIndexRoute
  '/_auth/auth/sign-in/': typeof AuthAuthSignInIndexLazyRoute
  '/_auth/auth/sign-up/': typeof AuthAuthSignUpIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/playlists'
    | '/problems'
    | '/auth/sign-in'
    | '/auth/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/playlists' | '/problems' | '/auth/sign-in' | '/auth/sign-up'
  id:
    | '__root__'
    | '/'
    | '/_auth/'
    | '/playlists/'
    | '/problems/'
    | '/_auth/auth/sign-in/'
    | '/_auth/auth/sign-up/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthIndexRoute: typeof AuthIndexRoute
  PlaylistsIndexRoute: typeof PlaylistsIndexRoute
  ProblemsIndexRoute: typeof ProblemsIndexRoute
  AuthAuthSignInIndexLazyRoute: typeof AuthAuthSignInIndexLazyRoute
  AuthAuthSignUpIndexLazyRoute: typeof AuthAuthSignUpIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthIndexRoute: AuthIndexRoute,
  PlaylistsIndexRoute: PlaylistsIndexRoute,
  ProblemsIndexRoute: ProblemsIndexRoute,
  AuthAuthSignInIndexLazyRoute: AuthAuthSignInIndexLazyRoute,
  AuthAuthSignUpIndexLazyRoute: AuthAuthSignUpIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth/",
        "/playlists/",
        "/problems/",
        "/_auth/auth/sign-in/",
        "/_auth/auth/sign-up/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx"
    },
    "/playlists/": {
      "filePath": "playlists/index.tsx"
    },
    "/problems/": {
      "filePath": "problems/index.tsx"
    },
    "/_auth/auth/sign-in/": {
      "filePath": "_auth/auth/sign-in/index.lazy.tsx"
    },
    "/_auth/auth/sign-up/": {
      "filePath": "_auth/auth/sign-up/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
