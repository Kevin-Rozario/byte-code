/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProblemsIndexImport } from './routes/problems/index'
import { Route as PlaylistsIndexImport } from './routes/playlists/index'
import { Route as AuthAuthLayoutImport } from './routes/auth/_authLayout'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()
const IndexLazyImport = createFileRoute('/')()
const AuthSignUpIndexLazyImport = createFileRoute('/auth/sign-up/')()
const AuthSignInIndexLazyImport = createFileRoute('/auth/sign-in/')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProblemsIndexRoute = ProblemsIndexImport.update({
  id: '/problems/',
  path: '/problems/',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistsIndexRoute = PlaylistsIndexImport.update({
  id: '/playlists/',
  path: '/playlists/',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthLayoutRoute = AuthAuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSignUpIndexLazyRoute = AuthSignUpIndexLazyImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/auth/sign-up/index.lazy').then((d) => d.Route),
)

const AuthSignInIndexLazyRoute = AuthSignInIndexLazyImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/auth/sign-in/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_authLayout': {
      id: '/auth/_authLayout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/playlists/': {
      id: '/playlists/'
      path: '/playlists'
      fullPath: '/playlists'
      preLoaderRoute: typeof PlaylistsIndexImport
      parentRoute: typeof rootRoute
    }
    '/problems/': {
      id: '/problems/'
      path: '/problems'
      fullPath: '/problems'
      preLoaderRoute: typeof ProblemsIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in/': {
      id: '/auth/sign-in/'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthLayoutRoute: typeof AuthAuthLayoutRoute
  AuthSignInIndexLazyRoute: typeof AuthSignInIndexLazyRoute
  AuthSignUpIndexLazyRoute: typeof AuthSignUpIndexLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLayoutRoute: AuthAuthLayoutRoute,
  AuthSignInIndexLazyRoute: AuthSignInIndexLazyRoute,
  AuthSignUpIndexLazyRoute: AuthSignUpIndexLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthAuthLayoutRoute
  '/playlists': typeof PlaylistsIndexRoute
  '/problems': typeof ProblemsIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexLazyRoute
  '/auth/sign-up': typeof AuthSignUpIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthAuthLayoutRoute
  '/playlists': typeof PlaylistsIndexRoute
  '/problems': typeof ProblemsIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexLazyRoute
  '/auth/sign-up': typeof AuthSignUpIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_authLayout': typeof AuthAuthLayoutRoute
  '/playlists/': typeof PlaylistsIndexRoute
  '/problems/': typeof ProblemsIndexRoute
  '/auth/sign-in/': typeof AuthSignInIndexLazyRoute
  '/auth/sign-up/': typeof AuthSignUpIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/playlists'
    | '/problems'
    | '/auth/sign-in'
    | '/auth/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/playlists'
    | '/problems'
    | '/auth/sign-in'
    | '/auth/sign-up'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/auth/_authLayout'
    | '/playlists/'
    | '/problems/'
    | '/auth/sign-in/'
    | '/auth/sign-up/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRoute: typeof AuthRouteWithChildren
  PlaylistsIndexRoute: typeof PlaylistsIndexRoute
  ProblemsIndexRoute: typeof ProblemsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRoute: AuthRouteWithChildren,
  PlaylistsIndexRoute: PlaylistsIndexRoute,
  ProblemsIndexRoute: ProblemsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/playlists/",
        "/problems/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_authLayout",
        "/auth/sign-in/",
        "/auth/sign-up/"
      ]
    },
    "/auth/_authLayout": {
      "filePath": "auth/_authLayout.tsx",
      "parent": "/auth"
    },
    "/playlists/": {
      "filePath": "playlists/index.tsx"
    },
    "/problems/": {
      "filePath": "problems/index.tsx"
    },
    "/auth/sign-in/": {
      "filePath": "auth/sign-in/index.lazy.tsx",
      "parent": "/auth"
    },
    "/auth/sign-up/": {
      "filePath": "auth/sign-up/index.lazy.tsx",
      "parent": "/auth"
    }
  }
}
ROUTE_MANIFEST_END */
